
/**
 *  CALLDATA_LENGTH HUFF EXERCISE
 *
 *
 *  When a user sends a transaction to a smart contract, they can include additional data, known as calldata, which the smart contract can use to execute its logic.
 *
 *  The task is to write within the `MAIN` macro below, huff code to get and return the length of this calldata, 
*/

#define macro MAIN() = takes(0) returns(0) {
    /**
      @notice Load input data size onto the stack
    **/
    calldatasize // [size]

    /**
      @notice Store size value in memory, mstore takes two arguments [offset, value]
    **/
    0x00      // [0x00, size]
    mstore    // []

    /**
      @notice Return first 32 bytes, return takes two arguments [offset, length]
              Since size is a fixed length element (uint256), 
              returning the first 32bytes slot is enough
    **/
    0x20      // [0x20]
    0x00      // [0x00, 0x20]
    return    // []
}
